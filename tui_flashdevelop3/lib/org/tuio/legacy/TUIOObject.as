/** * Legacy TUIOObject class. */package org.tuio.legacy {		import flash.display.DisplayObject;		import flash.geom.Point;		/**	 * Legacy TUIOObject class from Touchlib TUIO AS3. Use only for the port of existing code to TUIO AS3.	 *  	 * For the current Tuio event implementation see:	 * @see org.tuio.TuioManager	 * @see org.tuio.TouchEvent	 *  	 * For more information about this legacy Tuio implementation see: 	 * @see TuioLegacyListener	 * @see TouchEvent	 * 	 * 	 */	public class TUIOObject {						private var isNew:Boolean;			private var eventArray:Array;							public var tuioAlive:Boolean;				public var tuioType:String;				public var tuioObject:DisplayObject;				public var x:Number;		public var y:Number;		public var oldX:Number;		public var oldY:Number;				public var dX:Number;		public var dY:Number;							public var id:int;		public var sID:int;		public var area:Number = 0;			public var width:Number = 0;		public var height:Number = 0;				public var angle:Number;				public var pressure:Number;				public var startTime:Number;		public var lastModifiedTime:Number;						public var downX:Number;		public var downY:Number;			public function TUIOObject (type:String, id:int, x:Number, y:Number, dX:Number, dY:Number, sID:int = -1, angle:Number = 0, height:Number=0.0, width:Number=0.0, tuioObject:DisplayObject = null) {			this.eventArray = new Array();			this.tuioType = type;			this.id = id;			this.x = x;			this.y = y;			this.oldX = x;			this.oldY = y;			this.dX = dX;			this.dY = dY;			this.sID = sID;			this.angle = angle;						this.width = width;			this.height = height;			this.area = width * height;						this.tuioAlive = true;											try { 	 			this.tuioObject = tuioObject;			} catch (e:Error)			{				this.tuioObject = null;			}						this.isNew = true;						var d:Date = new Date();			this.startTime = d.time;			this.lastModifiedTime = this.startTime;		}				public function addListener(receiver:Object):void {			for(var i:int = 0; i < this.eventArray.length; i++) {				if(this.eventArray[i] == receiver){								return;				}			}			eventArray.push(receiver);		}		public function removeListener(receiver:Object):void {			for(var i:int = 0; i < this.eventArray.length; i++) {				if (eventArray[i] == receiver) {					eventArray.splice(i, 1);				}			}		}	} }